vnote_backup_file_826537664 D:/DATA_FILE/data/VNote/science/subject.md
## 1、数学
### 一、高等代数知识：
#### a1、行列式与线性方程组：
n维向量：有数域p中n个数组成的有序数组：(a1,a2,...,an)，ai是该向量的一个分量。向量的和：(a1+b1,a2+b2,....,an+bn)。
零向量：分量全为0的向量，(0,0,...,0)。向量可写成行的形式或列的形式，分别成为**行向量和列向量**。    
线性组合：如果向量a满足：`a=k1*B1 + k2 * B2 ...+kn * Bn`#k1,k2...是数域p上的，B1,...,Bn是一个向量组，即每一个分量都是一个向量。则称向量a是向量组B1,...Bn的线性组合。或者说a是可由向量组B1,...Bn线性表出。    零向量是任一向量组的线性组合。如果向量组(a1,a2,...,an)中每一个向量都能由B1,...Bn线性表出，则称这个向量组可由B1,...Bn线性表出。如果这两个向量组能互相线性表出，那么它们等价。
线性相关：在线性表出上加个特列，如果不全为0的数K1...Kn使得`k1*a1+....+kn*an=0`那么称这个向量组(a1,a2,...,an)是线性相关的。
极大线性无关组：在线性相关上衍生出的，一个线性相关的向量组中，存在一部分向量组合的向量组是线性无关的，就称这个组是其父组的一个极大线性无关组。
**秩**：一个向量组的极大线性无关组都有相同个数的向量，这反应了这个向量组的性质，称该向量组所含极大线性无关组中向量个数称为该向量组的秩。
线性方程组有解判别定理：方程组的个数需要>=未知数的个数才能解出所有未知数，这里需要用向量相关概念阐述：将线性方程组按列分成n组向量(a1,...,an)，而线性方程组有解得充分必要条件就是向量b(线性方程组结果列组成)，可被向量组(a1,...,an)线性表出。线性方程组的系数矩阵与增广矩阵有相同的秩 。单看他的系数矩阵的话需要是一个满秩矩阵，或是正定矩阵。S
#### a2、矩阵：
**背景**：除了解线性方程组能将参数转为矩阵思考之外，还有很多其它问题也能转化为矩阵表示，这就催生了将矩阵单独提出来作为一个专门研究的对象。
**矩阵的乘积**：点乘(内积)》两矩阵维数相同，对应位置相乘。np.multiply(a,b)。**多维与多维的叉乘**(外积)》第一个矩阵的行乘第二个矩阵的列分别相加生成对应位置的值。
矩阵乘积的引出：第一个线性方程组可以转化其参数为一个矩阵形式，第一个线性方程组中部分参数由第二个线性方程组表示，要将它们表示为一个时，需要将第二个带入第一个，而用矩阵的乘积只需要将两个参数矩阵叉乘即可。
向量的叉乘(外积)：都是一维时对应位置相乘，结果再相加。np.dot(a,b) or np.matul(a,b)
二维矩阵与一维矩阵的叉乘：二维的每一行乘一维(列数需要一样),结果为一维。
**矩阵的转置**：以主对角线为轴，将其它元素按这个轴对称过去，交换元素位置就是这个矩阵的转置，所以结果两次转置之后变回原样，而不是矩阵的旋转。
**矩阵的逆**：如果有n级方阵B可满足n级方阵A：`AB=BA=E`#就称A是可逆的，且B称为A的逆，记为A^-1。
**矩阵的秩**：借助向量组秩的定义，我们可以将矩阵也分成一个个向量，行向量组的秩就是矩阵的行秩。列向量组的秩就是矩阵的列秩。行秩一定等于列秩。
<i class="label1">矩阵与行列式</i>：矩阵与行列式可以互转，且`|AB| = |A||B|`。两者外表相同，但意义不同，行列式是可计算出一个结果值，而矩阵只是一个表，研究其内部关系变化的
**退化与非退化**：如果矩阵A的行列式`|A|≠0`则A是非退化的，否则是退化的。
<i class="label1">二次型</i>设p是一个数域，一个系数在数域p中的x1,x2,..,xn的二次齐次多项式。(1)`f(x1,...,xn) = a11x1^2 + 2a12x1x2 + ...+a22x2^2`称为数域p上的一个n元二次型，或简称二次型。通过对其中变量的线性替换来简化有关的二次型，如下：p208

```math
x1 = c11y1 + c12y2 + ... + c1nyn

xn = cn1y1 + cn2y2 + ... + cnnyn
```
把其带入二次型中得到关于y的二次型，即线性替换把二次型变为二次型。研究二次型在非退化的线性替换下的变化情况。
**变换**：`令aij=aji,由于xij=xji`上面二次型(1)式可补充为`f(x1,...,xn) = a11x1^2 + 2a12x1x2 + ... + a22x2^2 + 2a23x2x3 + ... + annxn^2`#将其系数排列成一个nxn矩阵，其它二次型式子也可以用一些手段变为这种形式。得到一个nxn矩阵A称为二次型的一个矩阵，因为aij=aji，所以A=A'，因此二次型的矩阵都是**对称的**。矩阵乘积表示二次型：`X'AX`。
**合同**：如果数域p上有可逆的nxn矩阵C使得：`B=C'AC`#就称数域p上nxn矩阵A,B是合同的。因此，经过非退化的线性替换，**新二次型的矩阵与原二次型的矩阵是合同的**。
**标准型**：二次型经过非退化线性替换所变成的平方和称为f(x1,...,xn)的标准形，即ax1^2+bx2^2+...+cxn^2的形式，只剩下平方项。数域p上任意一个二次型都可以经过非退化的线性替换变成平方和(1)的形式，尽管系数会不一样。数域p上任意一个**对称矩阵都合同一个对角矩阵**。
**唯一性**：由上面的变换，合同中可以看出，一个二次型线性替换后化为标准形，其秩与原二次型矩阵的秩一样，所以无论它经过什么样的非退化线性替换，其标准形中其系数不为0的平方项的个数不变。二次型的矩阵的秩就称为二次型的秩。
**规范形**：复数域上的二次型称为复二次型，任意一个复系数二次型经过适当的非退化线性替换都可以变为一个规范形：`z1^2+z2^2+...+zn^2`#系数为1 or -1的形式。
**惯性指数**：实二次型f(x1,,x2,...,xn)的规范形中，证平方项的个数p称为f的正惯性指数，负平方项的个数称为负惯性指数。n元实二次型f是正定的充分必要条件是它的正惯性指数等于n。
**正定二次型**：如果对于一组不全为0的实数c1,c2,...,cn都有f(c1,c2,...,cn)>0那么称实二次型f(x1,...xn)为正定的。<i class="blue">如果二次型X'AX正定，那么实对称矩阵A也正定。</i>正定矩阵的特征值全是正数。
#### 1、线性空间：
线性空间的由来是因为解析几何中在二维或三维空间中对向量的操作解决几何问题在物理中也有使用向量，变换等解决实际问题，它们中都有使用加法和数量乘法，当它们面对的对象不同它们运算的定义也是不同的，为了找到它们的共同点引入线性空间的概念。(在实数域或复数域中解线性方程时分别需要使用实数和复数去做计算所以引入线	性空间概念需要选定一个确定的数域做为基础)。**定义**：设v是一个非空集合,P是一个数域(实数域或复数域),集合v的元素间定义了一种叫加法的代数运算，对于v中任意两个元素a与b都有唯一个数r满足a+b=r;数域p和集合p之间还定义了一个乘法对数域中任一数k与v中任一元素c在v中有唯一个元素g满足g=kc;且加法与数量乘法满足下列规则：(属于p上线性空间v的一个非空自己和称为w称为v的一个线性子空间。)
(1)a + b = b + a;					(2)a + b + y = a + (b + y);
(3)在v中有一个元素0对于v中任一元素a都有 0 + a = a;(具有这个性质的元素0称为v的零元素，并非是0就是v的零元素)；
(4)对于v中每一个元素a都有v中的元素b使得a + b = 0;(b称为a的负元素)。
`(5)1*a = a;`								`(6)k(ja) = (kj)a；`
`(7)(k+j)a = ka + ja;   `             					`(8)k(a+b) = ka + kb;`
就称v是数域p上的线性空间。(求是线性空间时要根据这些条件都满足才是)
#### 2、维数、基与坐标：
 [线性空间的维数]如果在线性空间v中有n个线性无光的向量,但是没有更多线性无关的向量，那么v就称为是n维的(即任意n+1个向量组合后都是线性相关的)。[基]在n维线性空间v中n个线性无关的向量e1,e2,...en称为v的一组基；[坐标]设a是v中任一向量，于是a,e1,...,en线性相关，所以a可被这组基线性表出:`a=a1*e1+...+an*en`，其中系数a1,a2,...an是被向量a和这组基唯一确定的这组系数就称为a在这组基下的坐标。
#### 3、集合、映射、线性空间的同构：
集合就是指做为整体看的一堆东西,表示为：M={a|a具有的性质}
比如满足一个方差组的解的集合、对应的系数的向量。线性空间概念中的v就是一个这样的集合,再和数域结合并满足定义的计算就成了线性空间;空集为任何集合的子集。一个集合到另一个集合的使用发则称之为映射,M在映射a下的全体称为映射a下的像的集合，如果a(M)=M'就称a为映射上的满射，如果集合M中的元素不存在a(m1)=a(m2)就称a为单射，如果一个映射即是单射又是满射就称其为双射
[同构]数域p上有两个线性空间v，v',它们之间有一个双射a有如下性质：
（1）`a(m+n)=a(m)+a(n)`			(2)`a(km)=k*a(m)`	//m,n是v中两个任意向量，k是p中任意数
满足这些条件的两个线性空间v和v‘称为同构的，而映射a称为同构映射。
#### 4、线性变换：
线性空间是某一类事物从量方面的一个抽象(比如人脸图像数据,都为数字表示),要认清客观事物就要弄清它们单个和总体的性质，不过更重要的是研究它们之间的各种联系。而线性空间中事物的联系就反映为线性空间的映射，之前说的映射是一个集合到另一个集合的法则，但我们这里是要研究一个线性空间中各元素的联系就变成了空间到自身的映射，不过这个映射稍有点特殊，所以我们称这种自身到自身的映射叫线性变换。（线性变换是线性代数的一个主要研究对象）定义如下：
如果对于线性空间v任意的元素a,b和数域p中任意k都有： `€(a+b)= €(a)+ €(b)和 €(ka)=k* €(a)`
则称 €为线性空间v的一个线性变换。也说成线性变换保持向量加法与数量乘法。 
#### 5、线性变换的矩阵、特征值与特征向量：
[定理1]设e1,...e3是线性空间v的一组基,a1,...an是v中任意n个向量，,存在唯一的线性变换€使€ei=ai。[定义]e1,...en是v的一组基，€是v中的一个线性变换，基向量的像可以被基线性表出，如下：
`€e1=a11*e1+a21*e2+...+an1en;...€en=a1n*e1+a2n*e2+...+ann*en`;(每个基成员向量用基表示出来)
用矩阵来表示就是`€(e1,...en)=(e1,...en)*A`。A就称为€在基e1,...en下的矩阵。为了利用矩阵来研究线性变换，对于每个给定的线性变换我们希望找到一组基使得它的矩阵有最简单的形式。所以引入特征值、特征向量的概念方便此研究(它们对线性变换的研究有基本的重要性)。
在数域t上的线性空间v中有一线性变换u，对一向量r若能找到一个值p使得ur=pr则称p是向量r的特征值，r是特征值p的一个特征向量(u*kr=p*kr因此一个特征值可对应多个特征向量而一个特征向量只能对应一个特征值)。经过推导证明(推导过程以后添加)找到一个求特征值得到公共解法：|kE-A|=0,解出所有特征值k，把么个特征值带入解出对应的向量是特征向量在基下的坐标，再用基乘以该坐标得出对应的特征向量。(线性变换本来就是用于研究线性空间内各元素与总体的联系，而这里的值p与线性变换有类似的作用，这代表其也具有代表线性空间特征的一些意义，故称其为特征值)。
#### 6、一些基本计算公式：
这里用‘表示转置。
加减式子的转置：`(x + y)' = x' + y'`
乘式的转置：`(xy)' = y'x' #   (x'y)' = y'x`#需要交换位置。
矩阵微分公式：如下图所示。对式中x求偏导时需要满足如下形式(参数在两边和中间的情况)，不满足时可以试试乘式的转置，或其它方法变化过来试试。    类似的还有矩阵积分，求导等。
![matrix_differential](_v_images/20200725082732723_21055.png)
#### 7、欧几里得空间：
由来：当以几何空间中的向量做为线性空间理论的一个具体模型时能发现向量的一些度量性质，如长度、夹角等，但这在线性空间中未能得到体现。定义：(向量的度量性质都可以通过向量的内积来表示而且向量内积有明显代数性质所以在抽象的讨论中取内积做为基本概念)设v是实数域R上一线性空间，在v上定义了一个二元实函数称为内积，记为(a,b)具有以下性质：
(1)、(a,b) = (b,a);		(2)、(ka,b)=k(a,b)；	(3)、(a+b,y)=(a,y)+(b,y)
(4)、(a,a)>=0,当且仅当a = 0时(a,a) = 0；
a、b、y时线性空间v中的任意向量，k是任意实数，满足这些v就为欧几里得空间。酉(you)空间：酉空间就是在复数域上的欧式空间要求满足的性质也一样。酉矩阵：对n级复数矩阵A，用A_表示其共轭复数矩阵，若A满足AA_=A_A=E则称A为酉矩阵。
线性相关：如果向量组a1,a2,...an中有一个向量可以由其余的向量线性表出那么该向量组就称为线性相关的，否则称为线性无关。
正交向量：欧式空间v中有一组非零向量(每一个向量都不为0)如果它们两两正交(每两个相乘为0)则是正交向量。(正交向量是线性无关的，每个向量不超过n维)
标准正交基：n维欧式空间中由n个向量组成的正交向量组称为正交基，有单位向量组成的正交基称为标准正交基.(n维欧式空间中任一正交向量组都能扩充成一组正交基)
正交矩阵：若n级实数矩阵A满足A'*A=E则A称为正交矩阵。(复数域中叫酉矩阵)
### 二、概率论知识：
<i class="label1">重要前提知识</i><i class="orange">随机试验中每个可能的结果称为基本事件，所有基本事件的全体组成样本空间。</i>一个随机实验，数学上是用样本空间u、事件域v<i class="violet">(多数情况下可以认为事件域是u的全体子集，但也有部分情况下是不合理的，所以这不是一个推广)</i>和概率p来描述的，对一个事件域中的随机事件A求它的概率P(A)，是概率论的一个基本课题。<i class="green">概率与频率：概率是描述一件事发生的可能性的大小，是一个本质属性的东西。因为实验要达到足够多的次数，频率/总体值，才能稳定下来，而且现实中事件受到很多不确定因素的影响，所以频率只是近似概率，是用来计算概率的一种手段。</i>
#### 1、古典概型：
有限个样本空间，且发生的有限个基本事件w1,w2,...发生的概率是等可能的：p(w1)=p(w2)=...-p(wn)，这就是一早期概率论的古典概型，其直观且出现广泛。对于随机事件A(是k个基本事件发生的组合)，其概率：p(A)=A中所含基本事件数 / 基本事件总数 = k/n
#### 2、概率的公里化定义及概率的性质：
非负性、规范性、可列可加性。上面的古典概型的实验结果是有限的，但有些实验中实验结果是无限的(如指定面积中投点)，但实验结果为无限时会使得问题求解变得很困难。
 <i class="label2">蒙特卡罗法/随机模拟法</i>在一实验中，让一事件与某一随机数有关，通过大量实验求出频率即可求得这个未知数的近似解。
 在几何概型中事件域看似是样本空间的全体子集，但很遗憾，面积s中存在不可侧集，所以事件域只能描述成样本空间中具有面积的全体子集。
<i class="label2">全概率公式</i>设b1,b2,...,bn是一列互不相容的事件，且这些基本事件构成整个样本空间。则对任一事件A有：`P(A)=∑P(bi)*P(A|bi) `#注意这个公式的前提，b1,...,bi是构成整个样本空间的，所以事件A的发生是由一些列bi事件组成的。
<i class="label2">伯努利概型</i>实验E只有两个结果A,A-。而p(A)=p,p(A-)=1-p=q;把E独立重复n次又构成了一个实验(例如抛硬币,一次抛多个改为每次抛一个)称为n重伯努利概型。
<i class="label3">泊松定理和泊松分布</i>在n重伯努利实验中，事件A在一次实验中出现的概率为pn，如果当n趋于无穷时，`n*pn`趋于λ，则有公式：
`lim b(k;n,pn)=(λ^k / k!)*exp(-λ) `#k=0,1,...其中的公式exp(-λ)表示：e^(-λ)。这各定理适合在实验次数特别多的时候使用。这形成的分布称作是参数为λ的泊松分布(Poisson)。
<i class="label2">期望</i>在对比两个事物的好坏时(如两种品种母鸡的年产蛋量)，虽然看两者分布列也能够区分出来，但不够直观，也不够快，所以提出期望的概念(也是平时常用的平均值，不过这里的稍有点不一样而以)。[举一个例子]从工厂抽出100支手表,测出每只手表的日走时误差,分布为(支数，日走误差)(3,-2),(10,-1)...[平均日走时误差]`=3*-2+10*-1+.../100`(总日走误差/总支数)期中可拆分出3/100,10/100这些是在100支手表中的频率,所以原式可改为`s=sum(k*1/p(k))`#这个均值称为数学期望。(注意这里的期望和方差是离散型随机变量的情况)
<i class="label2">方差</i>这和小学学到的方差类似，对比一些期望分辨不出的实例。设a是一个离散型随机变量，数学期望Ea存在，如果E(a-Ea)^2存在则称该值为随机变量a的方差。
#### 3、离散型随机变量：
实验中原本只是为了求出各样本点出现的概率，但因为是实验的关系所以要统计各样本点的出现便于研究，因此实验中就出现了样本点出现次数以及对应样本点，两个变量，不过这是人为构建的。这其实就是一个函数的关系。实验E中样本点w出现的次数用e表示，而e=e(w)称为一维(实值)离散型随机变量<i class="green">(虽然是两个变量，但其描述的是一个事件所以将其称为一维的离散型随机变量)</i>。
<i class="label2">多维随机变量</i>一维随机变量是一维实值和实验结果的关系，这种情况研究简单，但多维的情况会变得更复杂。如研究一个家庭有两个小孩(男用1表示，女用0表示)，那么0和1就变成了两个离散型随机变量，表示为p(a=i,b=j)。这其实可以看作是两个基本事件0和1的组合情况，当这两者互不相容时就变成了：p(a=i,b=j)=p(a=i)*p(b=j)    *
<i class="label2">联合分布列、边际分布列</i>多个离散型随机变量的分布列表示即为联合分布列(3个及以上时无法在表中很好的表示)，联合分布列右侧，下侧对应的两个单个变量的分布称为这个联合分布列的边际分布列。
<i class="label2">泊松分布可加性</i>上面泊松定理描述中是一维随机变量的情况，而遇到多维随机变量的情况，泊松定理也有其性质对应，那就是泊松分布的可加性：设a,b是两个独立的随机变量，它们分别服从参数为λ1和λ2的泊松分布，则c=a+b服从参数为λ1+λ2的泊松分布，公式：`p(c=k)=[(λ1+λ2)^k / k!] * exp(-(λ1+λ2)) `#k=0,1,...。<i class="violet">注意这里的a和b是独立的，且是a+b的泊松分布，而且需要实验次数n非常巨大时可以使用。</i>
<i class="label2">二项分布、多项分布、单点分布</i>进行一个n重伯努利实验，x表示实验成功的次数，概率：
右图二项式系数，其构成的分布为二项分布。在n=1时的二项分布特例，所该分布列中只有0和1两个结果也叫两点分布。
多项分布：多项分布是二项分布的推广，先看一例：城市中按年龄分为n个组，对应的频率为p1,p2,...，现从城市中随机抽取N个人用x1,x2,...xn表示其中各age组所包含的人数，则x1,...xn服从多项分布。
X~B(N,P)定义：如果一个随机向量x=(x1,...xn)满足如下条件：(1)xi>=0(1<=i<=n),且x1+...+xn=N.(2)设m1,...mn为任意非负整数，且m1+..+mn=N,则事{x1=m1,x2=m2,...xn=mn}的概率为：
p{x1=m1,...xn=mn}=N!*p1^m1*...*pn^mn  /  m1!...mn!	(p1+p2+...+pn)=1则称随机向量x=(x1,...xn)服从多项分布，x~PN(N:P1,...Pn)
单点分布：当二项分布随机变量继续减少，也即随机变量 €只剩下一个情况时可以写成p( €=a)=1为单点分布或退化分布。
#### 4、连续型随机变量：
上面所述的都是离散型随机变量的情况，即样本空间是有限的，实验中出现的随机变量情况是有限的，但无限的情况也有很多(如测量某地气温)，这需要概率统计来解决。
举例：一个几何概型，在区间[a,b]上投点，统计其落入区间[c,d]的概率，按照离散型的情况计算分布列是：p(v(w)=w0)=p(w=w0)=lwo/(b-a)=0 #因为点没有长度，但这又是不合理的，所以需要换一种方法表示分布列。p(c<=v<=d)=(d-c)/(b-a)=>p(c<=v<=d)=p(v<=d)-p(v<=c)。定义：在样本空间u上，取值于实数域的函数v(w)，称为是样本空间u上的实值，并称：F(x)=P(v(w)<=x),x属于负无穷到正无穷。因为v(w)<=x是一种区间上连续变化的情况，因此要进一步更好的描述好连续型随机变量的分布需要借助积分的概念=>若r(x)是随机变量，F(x)是它的分布函数，如果存在函数p(x)使对任意的x有F(x)=ƒ p(y)dy(负无穷到x),ƒ表示积分,则称r(x)为连续型随机变量，F(x)为连续型分布函数，p(x)为其概率密度。<i class="green">任一随机变量的分布函数都具有如下性质：(1)单调性：若x1<x2,则F(x1)<=F(x2)。(2)有界性，(3)右连续性。</i>
<i class="label2">正太分布</i>若μ和σ(>0)是两个常数，则`p(x)=exp(-(x-μ)^2 / (2*σ^2)) / σ*sqrt(2*pi) `#在-无穷～+无穷情况下该式积分为1，称其为正太密度，构成的分布函数成为正太分布，高斯常用它来刻画误差，大量实验表明，如果一个变量受大量的微小的，独立的随机因素影响则该变量一般是个正太变量。正太分布转标准正太分布的计算：p118(暂留！)
<i class="label2">连续型随机变量的期望</i>上面介绍的期望是离散型的情况，连续型随机变量情况与离散型有些区别。<i class="violet">分析：</i>设a是一个连续型随机变量，密度函数为p(x)，区间上区分点x0,x1,...xn。a落在△x=(xi,xi+1)中的概率为：p(a∈△x)=ƒ p(x)dx #ƒ 是积分<i class="green">(因为(xi,xi+1)是一个连续的区间，这种情况符合积分的形式)</i>。当△x相当小时，有p(a∈△x)=p(x)*△x #*(类似几何情况中弧形区域相当小时可看作一个矩形区域)。所以该连续型随机变量的期望：∑ x*p(x)*△x。<i class="violet">定义：</i>设a是一个连续型随机变量，密度函数为p(x)，当(-无穷,+无穷)ƒ |x|*p(x)dx < +无穷#*时称a的数学期望存在，则Ea = (-无穷,+无穷)ƒ x*p(x)dx #*<i class="green">(因为前面分析中的△x是一个非常微小的量，所以整个式子的极限就是将△x去掉，再几何积分形式来描述求和符号)</i>
<i class="label2">二维随机变量的期望</i>设(a,b)是二维连续型随机变量，密度函数为p(x,y)，又f(x,y)是二元函数，则随机变量c=f(a,b)的数学期望为：
`Ec=Ef(a,b)=(-无穷,+无穷)ƒ ƒ f(x,y)*p(x,y)dxdy`
<i class="label2">切比雪夫不等式</i>对于事件|a-Ea|>b发生的概率与其Da有关(因为方差反映了随机变量偏离期望的平均程度)，粗糙的说Da越大这个事件发生的概率也会越大，因此将这个直觉经过实验，严格化就得到了：对任意随机变量a，其期望Ea=b，且Da存在，则对任意的正常数c有：p(|a-b|>=c)<=Da / c^2 #这个定理还是比较官用的，我们可以求一变量偏离其均值程度的概率范围。
<i class="label2">条件期望</i>如果随机变量a在(b=y)发生的条件小的条件密度函数为p(x|y)且：`(-无穷,+无穷)ƒ|x|*p(x|y)dx<+无穷`则称`E{a|b=y}=(-无穷,+无穷)ƒ|x|*p(x|y)dx<+无穷`为a在(b=y)发生的条件下的条件数学期望，简称条件期望。
<i class="label2">特征函数</i>书中描述到用上述的求分布函数、分布密度的方法有时候使用起来很不方便(如度a,b两个随机变量，密度函数为p(a),p(b)求c=a+b的密度函数为p(c)=p(a)*p(b)*这样是对式子做了卷积运算<i class="violet">(两个函数经过一系列计算得到第卅个函数)</i>，[这里的p(a),p(b)就是密度函数]，随机变量很多时计算会变得更复杂，而傅里叶变换能把卷积运算变为乘法运算，因此这里又如傅里叶，对于p(x)的傅里叶变换是：`Œ(t)=(-无穷,+无穷)ƒ e^(i*t*x) * p(x)dx`。定义：设€是一随机变量，称`Œ(t)=E*e^(i*t*€)，-无穷<t<+无穷`是€的特征函数，所以对于离散型随机变量的特征函数为：`Œ(t)=E*e^(i*t*€)=∑e^(i*t*x) * p`。设函数p、p1、p2的傅里叶变换为s(p)、s(p1)、s(p2)，又`p=p1*p2`则`s(p)=s(p1)*s(p2)`。(还没全部理解！)
#### 5、大数定律：
上面前言中说到，频率可以用来近似概率，实验次数越多，两者就越接近，但是否能说明概率是频率的极限呢？这是大数定律和中心极限定律所要阐述的。
分析：设在n次实验中A出现的次数为μn，如果说概率是频率的极限的话就有：对任意的整数N和任给的Œ>0都有|(μn / n) - p| < Œ。但当实验是一个单点分布时即μn / n=1，而0<Œ<1-p，所以这个式子是不成立的，也说明了概率不是频率的极限，它们的具体关系如下：
<i class="label3">伯努利定理</i>设μn是n重伯努利实验中事件A出现的次数，A在每次实验中出现的概率为p，则对任意的Œ>0有：`(n→+无穷)lim P(|(μn / n)-p|<Œ)=1`#其中的证明用到切比雪夫不等式p203，具体意思就是<i class="blue">当实验次数趋于正无穷时概率和频率的差值足够小的概率为1</i>，这称为伯努利大数定律。
<i class="label3">大数定律定义</i>若€1,...,€n是随机变量序列，如果存在常数列a1,...使对任意的c>0有：`(n→+无穷)lim P(|(∑€i / n)-an|<c)=1`则称随机变量序列{€n}服从大数定律。
<i class="label3">切比雪夫大数定律</i>
<i class="label3">马尔可夫大数定律</i>
<i class="label3">辛钦大数定律</i>
#### 6、抽样、统计量：
<i class="label1">先验分布</i>在进行一次实验之前我们一般会进行猜测实验结果且我们会多多少少知道一些实验中的一些未知参数可能的值这叫先验知识，我们对该值猜测的值和这样猜测的原因构成的这个分布就是先验分布。这是在实验前进行的所以不影响实验。
<i class="label1">后验分布</i>根据样本Xde分布PO及O的先验证分布tt(o)，用概率论中求条件概率分布的方法可算出在已知X=x的条件下o的条件分布，因为这个分布是在抽样后才得到的故称为后验分布。
<i class="label1">抽样</i>在很多情况下是从总样本中抽取一批子样拿来研究，如抽取一批灯泡，统计其质量。一般是使用随机方法从中抽取n个，且每抽取一个会将其放回打乱再抽，这叫做简单随机子样(由于每次抽样的总样本空间是一样的因此保证了每个样本被抽到的概率相同，所以经常使用)。而不放回的抽样使用较少，不过在n/N <=0.1#(n是抽取的个数，N是总样本个数，且很大时适合使用)时也可以用不放回抽样代替随机字样。
<i class="label2">确定抽样数量</i>用公式来大致确定需要抽样多少合适：放回抽样情况：`n=Z*a^2 / △^2`。不放回抽样情况：`n=N*Z*a^2 / (N*△^2 + Z*a^2 )`。#a^2是总样本方差，N是总样本数，Z是置信系数，是正态分布条件下与置信水平相联系的系数，置信水平取95%，则Zα/2=1.96，可以根据表格查找其值，95.45%是2。△是误差。[参考学习地址。](https://blog.csdn.net/cgch_cn/article/details/88700419)
<i class="label2">抽样误差</i>既然是抽样计算，那与全量计算就会差距，用误差计算公式来尽量的弥补两者的差距。
放回(重复)抽样误差计算：`u = sqrt(a^2 / n)`。不放回抽样误差计算：`u = sqrt([a^2 / n] * [(N-n) / (N-1)]) `。#a^2是抽样本方差，N是总样本数，n是抽样数。
<i class="label1">统计量</i>子样是母体的反映，但子样信息不能直接用于解决研究问题，需要对子样所含信息进行数学上的加工才能拿来用，所以构造一个依赖于子样的函数即统计量来研究。一个统计量是字样的一个函数，如果子样容量为n，它也就是n个随机变量的函数，并且要求这个函数是不依赖与任何未知参数的随机变量，统计量的分布称为抽样分布。随机变量a=∑€i 是一个统计量。`即使一个统计量不依赖于任何参数，但它的分布可能是依赖于未知参数的`。<i class="blue">说统计量是缩小子样与母体之间的差距的函数更为合适，这个统计量根据假设可以是表示子样的均值、方差或其它子样的描述。</i>
<i class="label2">一些常用统计量</i>设Œ1,...,Œn是从母体Œ中取出的容量为n的字样。
统计量：`Œ' = ∑Œ / n`称为字样均值。统计量：`s^2 = ∑(Œ - Œ')^2 / n`称为字样方差#Œ'是均值。统计量：`m = ∑(Œ - Œ')^k / n`称为字样k阶中心矩。统计量：`Œ'^k = ∑Œ^k / n`称为字样k阶矩。
<i class="label2">定理</i>设母体服从正太分布N(u,a^2)，(Œ1,...,Œn)是取自母体的一个子样，则Œ‘服从正太分布：N(u,a^2 / n)。推理在p242。
#### 7、点估计：
数理统计的基本问题是根据子样本所提供的信息，对母体分布及分布的数字特征等作出统计推断的问题，这个问题中的一类是母体分布的类型为已知，而它的某些参数为未知，这类问题称为参数估计问题。
设€1，€2,..,€n是取自母体的一个子样，我们构造一个统计量，n=(€1,...,€n)作为参数œ 的估计，统计量n为参数œ 的一个估计量，若(x1,x2,...,xn)是(€1，€2,..,€n)的一组观测值，则y=u(x1,x2,...,xn)就是œ 的一个点估计值。如果分布族中含有k个未知参数，即{f(x;œ 1,...,œ n)}则需要构造k个统计量作为各参数的估计量，这种问题又称为参数的点估计问题。
<i class="label1">矩法估计</i>
<i class="label1">极大似然估计</i>极大似然估计是求估计的另一种方法(由高斯提出)，直观想法：假设一个实验会出现若干种情况，若在一次实验中结果A出现则会认为实验条件对A有利，即A出现的概率更大。假设从容量为n的子样r1,r1,...取到观测值x1,x2,...的概率为：`f(r1=x2,...)=p^x1(1-p)^(1-x1)*p^x2...`
可写为：L(p)=p^(sum(xi))*(1-p)^(n-sum(xi))。根据极大似然的思想，在一次实验中取得x1,...xn的概率应该最大，即L(p)达到最大值，lnL(p)会是一个单掉增函数求其极大值：求导，令其为0后可得：p'=p'(x1,x2,...xn)=sum(xi)/n这使L(p)达到最大，称为参数p的极大似然估计。
<i class="label1">克拉默-拉奥不等式</i>
7、狄利克雷分布：
#### 8、假设检验：
<i class="label1">基本思想和概念</i>怎样在字样基础上作出一个较大把握的结论就是统计假设检验问题。把任意一个有关未知分布的假设称为**统计假设**或简称**假设**。例如在一批产品中引入了新的技术，我们要判断引入新技术后该产品是否有显著提高(一般用平均值)。那么u=1000是一个**原假设**，u>1000是一个**备选假设**(具体选哪个作为原假设要根据具体业务和情况)。<i class="green">用一个字样无法去证实一个陈诉，当去否定一个陈诉的理由就比较充分(如假设一批数据中每个值都大于10，只需要找到一个小于10的即可推翻，而不用每个都去确定)。所以统计假设检验问题的一般提法是：在给定备择假设H1下对原假设H0作出判断，若拒绝原假设H0那加意味着接受假设H1。</i>
<i class="label2">参数假设</i>在许多问题中母体的分布类型为已知，仅有一个或几个参数为未知<i class="green">(虽然类型已知，但某些参数未知，仍然算做是未知分布，所以符合上面统计假设的定义)</i>，需要对这几个参数作出假设，这种仅涉及到母体分布的未知参数的统计假设称为**参数假设**。
<i class="label2">非参数假设</i>某些情况下我们不知道母体的分布类型，只能对分布函数的类型或它的某些特征提出某种假设，称为非参数假设。如：
H0：F(x)∈ {对数正太分布簇}。H1：F(X)∈ {正太分布簇}。如果一个统计假设完全确定母体的分布，就称为**简单统计假设**，否则称为**复合统计假设**。
<i class="label1">检验法则</i>显然它应该是一个定义在子样本空间上的一个函数为依据所构成的准则，一旦子样的观察值(x1,...,xn)确定后就可以依据这个规则判断是拒绝H0还是拒绝H1，这称为一个检验法则。本质上是把字样空间划分为两个互不相交的子集c和c'(看作是一种符合两种假设特征的样本)，若字样的观测值点(x1,...,xn)∈ c则拒绝假设H0，否则拒绝H1。称这个字样空间的子集c为**检验的临界域**。
<i class="label2">两类错误</i>由于子样的随机性，判断时还是可能回放两类错误，一类是H0为真时子样观测值落入c，而按给定检验法则当拒绝H0，这是第一类错误，范第一类错误的概率称为**拒真概率**。相反称为第二类错误，发生的概率称为**受伪概率**。
<i class="label2">使用示例</i>如果原假设H0：u=1500为真，那么抽样取25时灯管平均寿命x服从N(u,a^2 / n)。若备择假设H1：u>1500为真，则x取值大于u的可能性就增大，x比u大的多时就拒绝原假设H0。此时取：v = (x - u) / sqrt(a^2 / n)作为检验统计量。
这里取显著性水平b=0.05，从标准正太分布N(0,1)表查得U(1-b)=1.65，从而得到临界域`c={(x1,.,xn):(x'-1500)/40 >=1.65}#这里集和中的计算公式是根据统计量公式来计算的`。b为0.05表示字样符合原假设的概率为95%，0.05就对应上面说的拒真概率，依照这个概率在正太分布表中取的值所画出的区域-1.65~1.65之间就称为接受域，以外的称为拒绝域或临界域，所以按照上面临界域的计算，若子样本均值落到这个区间，就拒绝原假设(因为洛入这个区域的概率及小，而恰好发生了，所以是及具说服力的判断)。以下是几种常用检验，流程相同，只是统计变量不同。
<i class="label1">Z检验(u检验)</i>平均值差异性检验的方法,当已知标准差时,验证一组数的均值是否与某一期望值相等时,用Z检验(样本数大于30时使用)。检验同一样本中子样本与总样本平均值差异性时:z = (x-u)/s/sqrt(n);x时检验的样本平均值,u时总体样本平均值,s为总样本标准差,n为检验的样本容量。两组不同样本检测差异性时使用：z = (x1-x2)/sqrt(sa^2/n1+sb^2/n2);x1,x2时两组样本的均值,sa,sb时它们的标准差值小则说嘛两组差异显著。观察的样本数小于30时使用T检验。[参考学习地址](https://blog.csdn.net/robert_chen1988/article/details/103378351)。
<i class="label1">T检验(student检验)</i>用t分布理论来推论差异发生的概率，从而比较两个平均数的差异是否显著。t检验可分为单总体检验和双总体检验，以及配对样本检验。它与f检验、卡方检验并列。与Z检验非常相似主要用于样本数小于30时使用。<i class="blue">t检验是参数假设检验，母体方差为未知的情况，而统计量中不能含有未知数，所以需要构建一个方差的无偏估计，也就是用方差的计算方法代替</i>，得到`s=∑(ξ - ξ')^2 / (n-1)#替代母体方差`，而t统计量为：`t=(ξ'- μ) / [s/sqrt(n)]`#这是课本上的推导。
单总体t检验：单总体t检验是检验一个样本平均数与一个已知的总体平均数的差异是否显著。当总体分布是正态分布，如总体标准差未知且样本容量小于30，那么样本平均数与总体平均数的离差统计量呈t分布。公式:t = (x-u)/s/sqrt(n-1);
双总体检验：双总体t检验是检验两个样本平均数与其各自所代表的总体的差异是否显著。双总体t检验又分为两种情况，一是独立样本t检验（各实验处理组之间毫无相关存在，即为独立样本），该检验用于检验两组非相关样本被试所获得的数据的差异性；一是配对样本t检验，用于检验匹配而成的两组被试获得的数据或同组被试在不同条件下所获得的数据的差异性，这两种情况组成的样本即为相关样本。公式:t = (x1-x2)/sqrt({[(n1-1)sa^2+(n2-1)sb^2)]/(n1+n2-2)}*(1/n1 + 1/n2));
自由度的选择：检验两个样本的差异时，自由度可选样本数-1，然后任选一个p查表。大于指定值则认为两者无明显差异。即值越小相关性越大。
<i class="label1">卡方分布</i>若n个相互独立的随机变量ξ₁，ξ₂，...,ξn ，均服从标准正态分布（也称独立同分布于标准正态分布），则这n个服从标准正态分布的随机变量的平方和构成一新的随机变量，其分布规律称为卡方分布。求出卡方值再与卡方分布表对比，大于则假设成立。[学习参考地址。](https://blog.csdn.net/snowdroptulip/article/details/78770088)
<i class="label2">卡方检验</i>u检验于t检验是有关均值假设的显著性检验，卡方检验是有关方差的显著性检验。(检验定性自变量对定性因变量的相关性。假设自变量有N种取值，因变量有M种取值，考虑自变量等于i且因变量等于j的样本频数的观察值与期望的差距)公式：`X^2 = Σ(O-E)^2 / α`;#分子是子样方差，分母为母体方差。因为这个形成的抽样分布是在1附近上下波动，所以计算临界域的方法与上面的检验不同=》查找卡方临界值表的对应值。`使用情景：如要检查车厂配件加工精度(用方差度量)是否变底了`。<i class="green">主要用于分类变量（定义数据和定序数据），适用于频率数据的分析数据。常用于检验总体分布是否服从指定的分布的一种非参数检验的统计方法，可用于两个或多个频率间的比较、样本关联度分析和拟合优度检验等。</i>[参考学习地址。](http://blog.sina.com.cn/s/blog_13ea9a2450102ww2u.html)

### 三、数学分析知识：
1、函数极限：定义：设f为定义在[a,正无穷]的函数，A为定数，若对人给的q>0，存在正数M(>=a),使得当x>M时(因为M可以无穷大，所以x也需要趋于无穷大方向，这要求x逐渐增大f(x)趋于一个值，所以需要x>M这个条件)有：
|f(x)-A|<q。则称函数f当x区于正无穷时以A为极限，记为：lim(x趋于正无穷)f(x)=A。
2、函数连续性：定义：设函数f在某U(x0)上有定义，若lim(x->x0)f(x)=f(x0)则称f在点x0连续。
另一种表述：记sx=x-x0，称为自变量x在点x0的增量或改变量，设y0=f(x0)相应的函数y在点x0的增量记为：△y=f(x)-f(x0)=f(x0+△x)-f(x0)=y-y0		即为：lim(△x->0)△y=0
3、导数：导数的思想最初是由法国数学家费马为研究极值问题而引入的，但与其概念有直接联系的是已知运动规律求速度和已知曲线求它的曲线，从而推导出的导数概念：
定义：设函数y=f(x)在点x0的某领域内有定义，若极限：lim(x->x0)(f(x)-f(x0)) / (x-x0) 存在。这称函数f在点x0处的导数f'(x0)。还可以写作：lim(△x->0)△y / △x = lim (f(x0+△x)-f(x0)) / △x = f'(x0)。(该极限可能是该函数某点的切线斜率等等)。
基础函数的求导法则：
`(sin x)'=cos x	`###						`(cos(x))'=-sin(x)`###			`(x^n)'=n*x^(n-1)`###	
`(a^x)'=a^x * lna`	###			`(e^x) = e^x`					`(log(a,x))'=1/(x*lna)`###	
`(lnx)'=1/x`###								`[g(x)/h(x)]'=[g(x)'h(x)-h(x)'g(x)]/h(x)^2`###	
`[f(x)*g(x)]' = f(x)'g(x)+g(x)'f(x)`###				`(f(g(x)))'=f(g(x))'*g(x)' `   ####	
4、微分：微分的引入：设一边长为x的正方形，它的面积S=x^2，若边长由x0增加△x，相应地方正方形的面积的增量为：`△S=(x0+△x)^2 - x0^2 = 2x0*△x + (△x)^2`。从这个例子中观察出来当给x0一个微小增量△x，由此引起的正方形面积增量△S可以近似的 用第一部分△x的线性部分来代替，由此产生的误差是一个关于△x的高阶无穷小量(△x)^2。
定义：设y=f(x)定义在点x0的某领域U(x0)上，当给x0一个增量△x，x0+△x属于U(x0)时相应得到函数的增量为：`△y=f(x0+x△)-f(x0)`，如果存在常数A使得△y能表示成`△y=A*△x+o(△x)`则称函数f在点x0可微。所以微分是表示函数的增量的。而f(x)可表示成：`f(x) = f(xo) + A*△x+o(△x)`。
5、泰勒展开：由上面的微分可知，x上的增量引起y的增量可表示成一个高阶无穷小量和一个△x的线性表示，加上f(x0)可近似表示为f(x)，但很多时候只取一次多项式逼近f(x)是不够的，公式：
`Tn(x)=f(x0)+f'(x0)*(x-x0) / 1! + f''(x0)*(x-x0)^2 / 2! + ... + f'n(x0)*(x-x0)^n / n!`#称为f(x)在x0处的泰勒多项式，x-x0前面的项为泰勒系数。
6、方向导数：导数表示函数在某个坐标轴上的变化率，而在3维和高维空间中有时想要了解函数具体在某一方向上的变化率，所以引入方向导数概念，因此其定义和导数的定义很像。
定义：设三元函数f在点p0(x0,y0,z0)的领域U(p0)内有定义,l为从点p0出发的一条射线，p(x,y,z)为线l上且含与U(p0)内的任意一点,p与p0的距离为d，若极限：lim(d趋于0的右极限)(f(p)-f(p0))/d = lim(d趋于0的右极限)f'/d则称此极限为函数f在点p0迎着l的方向导数。
【定理17.6：若函数f在点p0(x0,y0,z0)可微则f在p0沿任意方向l的方向导数都存在且：`fl(p0) = fx(p0)cosa+fy(p0)cosb+fz(p0)cosc`,cosa,cosb,cosc为方向l的反向余弦。证明可从距离公式开始：x-`x0=d*cosa,y-y0=d*cosb,z-z0=d*cosc`】#
7、梯度：是函数在某点的3个坐标轴的变化率的统一向量表示。若f(x,y,z)在点p0(x0,y0,z0)存在对所有自变量的方向导数则称向量(fx(p0),fy(p0),fz(p0))为函数f在点p0的梯度，记做:`gradf = (fx(p0),fy(p0),fz(p0))`,向量gradf的长度为：`|gradf| = math.sqrt(fx(p0)^2+fy(p0)^2+fz(p0)^2)`。根据定理17.6记l方向上的单位向量l0=(cosa,cosb,cosc)
方向导数公式可写成：`fl(p0)=gradf(p0)*l0=|gradf(p0)|*cosh`  (向量相乘公式)，h为0时cosh达最大值则此时梯度为最大值，所以f在点p0可微时f在p0的梯度方向是f增长最快的地方，且沿这一方向的变化率就是梯度的模。【我们求完一个点的梯度值此时并没有加上方向(根据方向导数的定义就知道)而如果有方向就用上面推导出的了一个方向导数公式表示，所以我们手动为梯度值乘上一个值后就是向着对应的方向求梯度下降或上升。】
8、点到平面、点、线的距离：**平面表达式**：`ax+by+cz+D=0`。线L表达式：`ax+by+c=0,p(x0,y0)`。点p(x0,y0,z0)，则距离公式为：
`d=|ax0+by0+cz0+D|/sqrt(a^2+b^2+c^2)`。[到点]`sqrt((x1-x2)^2+(y1-y2)^2)`。`|ax0+by0+c|/sqrt(a^2+b^2)`[点到线]
9、凸函数与凹函数：国内和国外对两者的定义是相反的，**国内**(根据几何图形的定义)：x1和x2是函数上的两个点，若x1与x2中间任意一点都在x1和x2连线的上方则是凸函数，反之为凹函数。**国外**(根据函数来定义)：若f(x)在[a,b]上连续，在(a,b)内具有一阶和二阶导数，若在(a,b)内f''(x)>0则f(x)在[a,b]上的图形是凹的，若f''(x)<0则是凸的。**统一的判断方法**：设函数f(x)在区间i上有定义，若对i中任意两点x1，和x2和任意r属于(0,1)都有：`f(r*x1+(1-r)*x2)<=r*f(x1)+(1-r)*f(x2)`则f为i上的凸函数，>号成立则称为严格凸函数，相反>=为凹函数。 
10、显函数与隐函数：显函数表达式大多是自变量的某个算式，如：y=x2+1,u=e^x等。而隐函数则是其自变量与因变量之间对应的法则写成的一个方程。如：x^2+y-2xy=0.隐函数定义如下：
设E属于R^2，函数F：E->R对于方程：F(x,y)=0如果存在i,j属于R，对任何x属于I有唯一确定的y属于j
使得(x,y)属于E，且满足上述方程，则说该方程定义了一个定义在I上值域含于J的隐函数。
11、拉格朗日乘数法： 对于非条件类的极值一般求其偏导来解(费马大定理)，对于有条件限制的求极值称为条件极值，以前的求条件极值是用消元法将条件式转变为函数式中一个已有变量来表示，然后求出稳定点求解。但不都是所有条件式中都能求出变元的表达式。先看下例：
欲求函数z=f(x,y)的极值，(x,y)受条件c:r(x,y)=0限制。设c上dianp(x0,y0)为函数f在条件c下的极值点，且在点p0某领域上条件c方程能唯一确定可微的隐函数y=g(x),那么z=f(x0,g(x0))=h(x0),由于在p0可微可得：`h'(x0,y0)=fx(x0,y0)+fy(x0,y0)g'(x0)=0`，假设对g(x)求导可写成：`g'(x0)=rx(x0,y0)/ry(x0,y0)`带入式子后得：`fy(p0)ry(p0)-fy(p0)rx(p0)=0`可引入一个参数表示为：
`L(x,y,t)=f(x,y)+t*r(x,y)`，所以对于有条件的极值可直接写成这一步，然后对各个变量求偏导：
`L'x=f'x(x,y)+t*r'x(x,y)=0	L'y=f'y(x,y)+t*ry(x,y)=0	L't=t(x,y)=0` 然后解出3个变量求出极值,所以拉格朗日乘数法就是将有条件的n个变量k个约束的条件极值变为求无条件约束的n+k个变量的极值问题。其中引入的新的变量t叫做拉格朗日乘数。
12、级数和积分：
【级数】级数是指数列的项依次用加号连接起来的函数(有些函数是用其它多个函数相加表示的)。典型的级数有正项级数、交错级数、幂级数、傅里叶级数等。定义：级数是指将数列un的项u1,u2,...un
依次用加号连接起来的函数，是数项级数的简称。如：`u1+u2+...+un=∑un=Sn`,如果Sn有极限s则说级数收敛，否则说该级数发散。 正项级数：sm=u1+u2+...。un>=0。正负项相间的级数为交错级数。形如：∑an(x-x0)^n的级数称之为幂级数。
【积分】(微分学与数学分析里的一个核心概念)对于一个给定正实值函数，在区间(a,b)的定积分标示为该函数从a到b的函数曲线与垂线和坐标轴围成的面积。分为定积分(给定了积分式子的区间，求原函数在该区间的积分值)和不定积分(是求给定积分式子的原函数)。
13、傅里叶分析：包括傅里叶级数和傅里叶变换
[简谐震动：y=Asin(wx+L)].A:振幅、w:角频率、L：初相角、频率：T=2pi/w【傅里叶级数】
`yk = Aksin(kwx+Lk) >> y = sum(Aksin(kwx+Lk))` // k是下标。(只讨论w=1的情况[w!=a则用wx代替x，对无穷多个简谐震动yk叠加后得到：`a0+sum(akcos(ks)+bksin(kx))`  //这是由三角函数列产生的一般形式的三角级数。])这是一个函数项级数，我们需要讨论该级数其中的一些规律：
若该级数收敛则它的和一定是一个以2pi为周期的函数。三角函数系：1,cosx,sinx,cos2x,sin2x,...以上三角函数系中任何两个不同的函数的乘积在[-pi,pi]上的积分都是0；以上任何一个函数的平方在
[-pi,pi]上的积分都不等于0.
证明其收敛性定理如下：若级数`|a0|/2 + sum(|an|+|bn|)`收敛则以上级数在数轴上绝对收敛且一致收敛。>>(推理出，证明过程省略)若两个函数€,Œ在[a,b]上可积且
`(a~b)intel(€(x)*Œ(x))dx=0`则称函数函数€,Œ在[a,b]上是正交的。所以称三角函数系在[-pi,pi]上具有正交性。我们之所以提出此正较性是为了方便后面讨论三角级数的和函数和级数系数a0,an,bn之间的关系。傅里叶级数定理：
若在整个数轴上`f(x)=a0/2+(1-↑)∑(an*cos(nx)+bn*sin(nx))`其在等式右边级数一致收敛，则有：
`an=1/π * (-π~π)intel(f(x)cos(ns))dx   bn=1/π * (-π~π)intel(f(x)*sin(nx))dx`	  (10)
=>(证明过程省略)若f是以2π为周期且在[-π,π]上可积的函数，则按(10)计算出的an和bn称为函数f的傅里叶系数，以f的傅里叶系数为系数的称为傅里叶级数。
傅里叶变换：https://www.cnblogs.com/h2zZhou/p/8405717.html
## 2、英语
### a、编程常用相关词汇：
```
###>>>>>        A        <<<<<###
abnormal//adj,异常的；变态的                              artificial intelligence//人工智能                       architecture//n,建筑学，建筑风格                         
assume//vt,承担，假定	                                    allocating//n,分配、vt,配置                              algorithm//n,算法，运算法则
average,mean//n,平均                                     abstrict//n,摘要                                        assist//v,参加，有助于、协助
assign//vt,赋值,指派
###>>>>>        B        <<<<<###
batch//n,一批,vt,分批处理	                                binomial//adj,二项的                                    binomial distribution//二项分布
beam//n,光线，电波;vt,发送，照射                           binary//adj,二进制的
###>>>>>        C        <<<<<###
coordinate//n,坐标；adj,同等的并列的                       cause,reason// n,原因                                    corpus//n,语料库
convolution//卷积                                        corps,object//n,物体                                    capital gain//资本得利
capital loss//资本损失                                    convert//vt,使转变                                        capital//n,首都、省会、资本家
crop//v,收割,剪短,n,产量                                    context//n,上下文，环境                                config//n,配置，布局
convole//vt,使卷，使缠绕                                   chief//n,首领,adj,主要的,adv,主要的                    couplet//n,对联
competitive//adj,竞争的，比赛的                            candidate//n,候选人，候补者                            collapse//v,倒塌，瓦解
coefficient//n,系数
capture//n,捕获
###>>>>>        D        <<<<<###
decay//vi,衰退,衰减                                        dependencies//n,依赖性，相关性                         duplicate//adj,复制的，重复的
denote//n,指示，表示                                    draft//n,草稿，汇票；//vt,起草，制定                    dense//adj,密集的	
directive//n,指令
###>>>>>        E        <<<<<###
exceed,surpass//超过                                    example//n,例子,榜样                                     exponential//adj,指数的
exhaust//vt,耗尽,exhausted//adj,用尽的                    execute//v,执行、处死                                excluded//adj,排除的
entities//n,实体
###>>>>>        F        <<<<<###
favorable//adj,有利的良好的，优惠的                        fitment//n,家具，设备，装修                            forbidden//adj,被禁止的,严禁的
###>>>>>        G        <<<<<###
graphics//n,图表算法，制图法
###>>>>>        H        <<<<<###
histogram//n,直方图
###>>>>>        I        <<<<<###
interpolate//vi,插入、篡改                                invalid//adj,无效的，有病的                            integer//n,整数
iterable//adj,能推论的，迭代                               increment//n,数量、增加                                implement//vt,实施，执行
###>>>>>        J        <<<<<###
###>>>>>        K        <<<<<###
###>>>>>        L        <<<<<###
logistics//n,后勤学，物流	                                legend//n,图例，说明，传奇                                latent//adj,潜在的
###>>>>>        M        <<<<<###
merge//vt,合并，吞没                                       machine learn//机器学习
###>>>>>        N        <<<<<###
###>>>>>        O        <<<<<###
operand//n,操作数，运算对象
###>>>>>        P        <<<<<###
previously//adj,以前的                                 proto//n,原型，样机                                        primary//adj,主要的、初级的
parity//n,平价、相等；disparity//n,不平等的                patented//adj,专利的                                    params//n,参数
postprocessor//n,后处理机                                perceptron//n,感知器	                                    propose//n,建议，打算
process//n,过程；//v,审核，处理
###>>>>>        Q        <<<<<###
quantity//n,量、数量、数目
###>>>>>        R        <<<<<###
regression//n,回归、复原、退化                            resource//n,资源	
###>>>>>        S        <<<<<###
sequence//序列、顺序                                    subplot//n,次要情节                                        scalar//n,标量的
summary//n,adj,摘要，简易的                                shuffle//v,洗牌、搅乱                                   statistics//v,统计
shown//v,解释、表露、给予                                seniority//n,排行榜                                        slices//n,切片
serial//adj,连续的serialize//连载	                        semantic//adj,语义的，语义学的                                scheme//n,计划，组合，体制
stack//n,堆，堆叠                                        solely//adv,单独地、唯一地                                sparse//adj,稀疏的
slash//vt,猛砍，严厉批评                                slote//n,斜率                                        syntax//n,句法，语构。
###>>>>>        T        <<<<<###
tutorial//adj,辅助的,个别指导的                            transpose//v,调换、颠倒顺序                               trace//vt,跟踪，探索
trend//n,趋势
###>>>>>        U        <<<<<###
unfolds//vt,打开，vi:展现	                                utterances//n,表达，说话
###>>>>>        V        <<<<<###
visor//n,遮阳板
###>>>>>        W        <<<<<###
weather//n,天气                                            wiki//n,维基百科
###>>>>>        X        <<<<<###
###>>>>>        Y        <<<<<###
###>>>>>        Z        <<<<<###

```
### b、英语中的句子成分:
- 主语：句子主要成分。一般为名词，名词短语。
- 谓语：一般在主语之后，由动词，动词短语构成。
- **表语**：说明主语的性质，身份，特征和状态。表语须和连系动词一起构成句子的复合谓语。可以由名词，形容词等担任。
- 宾语：谓语动作所涉及的对象，它是动作的承受者，一般由名词担任。
- **定语**：描述名词，代词，短语或从句的性质，特征范围等情况的词叫做定语。可以由名词，形容词和起名词和形容词作用的词，短语担任。
- 状语：从情况、时间、处所、方式、条件、对象、肯定、否定、范围和程度等方面对谓语中心词进行修饰、限制。
- **同位语**：一个名词(或其它形式)对另一个名词或代词进行解释或补充说明，这个名词（或其它形式）就是同位语。同位语与被它限定的词的格式要一致，并常常紧挨在一起。关系不是很紧密时也用逗号隔开。Smith,our new teacher,is very kind to us.
### c、词性及作用：
- 名词：人物、地点、机构等，常做主语。
- 动词：表示动作，行为的词，有及物和不及物之分。
- 形容词：修饰名词，不一定都放在名词前面，说明事物的特征，如果是一个有层级属性的形容词可以用副词修饰它。
- 副词：可以修饰动词、副词、形容词和其它结构。多数位于句尾，但若宾语过长，可以前置。多个副词修饰同一个词时注意用and，but等连接，且注意顺序。
- 介词：一种用来表示词与词, 词与句之间的关系的词。在句中不能单独作句字成分。介词后bai面一般有名词代词或相当于名词的其他词类，短语或从句作它的宾语。
- 代词：不只有人称代词，还有一些物体别名，统称等也会用作代词，如果句中用了代词，**得搞清楚，它指代的谁**。
- 系动词：用来辅助主语的动词。它本身有词义，但不能单独用作谓语，其后必须跟表语，构成系表结构说明主语的状况、性质、特征等情况。如：am、is、are、wa、were。
### d、5种基本句型：
这5种基本句型可以拓展到其它句型。
- 主语+系动词+表语。these apples are very fresh.
- 主语+谓语（不及物动词），后面不能加宾语，可加状语。i can't sleep in the night.
- 主语+谓语（及物动词）+宾语
- 主语+谓语（及物动词）+间接宾语+直接宾语。谓语不仅是及物动词，而且涉及到两个事物。she give me a new book in my birthday.
- 主语+谓语+宾语+状语。I have left Beijing at five.
- **从句**：从句不能单独成句，一般在主句中做一个部分，从句一般由关联词引导，但关联词有时也会省略，如：what,that。从句分类如下：
>名词性从句：<b class="red">在句子中的作用相当于名词。</b>包括主语从句、表语从句、宾语从句以及同位语从句。
>形容词性从句：<b class="red">在句子中的作用相当于形容词词。</b>定语从句。
>副词性从句：<b class="red">在句子中的作用相当于副词。</b>状语从句。还可以分为条件状语从句、原因状语从句、地点状语从句、目的状语从句、让步状语从句、比较状语从句、方式状语从句、结果状语从句和时间状语从句（常见引导词为：before，after，as等）。
- [学习地址。](https://www.vipkid.com.cn/posts/11345.html)
### e、短语、语法、特殊词：
- **名词所有格**：名词有三个格：主格、宾格、所有格，主格与宾格形式相同所以统称为通格，名词做主语，宾语，表语时用通格。所有格形式有：'s和of所有格，举例如下：
today's paper(今天的报纸) #有生命的、时间、地点、距离也可加's。其它可以用of： the title of the book.
- **as相关**：(1)、表示当某人身份时：As a gardener,hell take care of all flowers。(2)、`as/so long as:只要`#As long as we dont nose hert,we will find a way to over the difficult。（3）`as/so far as:据..就..`#As far as i know.（4）`so as to do>为了做...`#They started early so as to catch the first bus.（5）`so...as to...>如此..以至于`#You are so kind as to show me the way.（6）`as a matter of fact`#其实，实际上。（7）`may/might as well`#还是，还不如。（8）as well as#既..又...，以及、此外。（9）`as...as...`#和什么一样。
- **to的用法**：(1)、表针对：Air is indispensable(不可或缺的) to life.（2）表比较：The quarrel(争吵) happened `prior(占先的) to` my arrival(到达)。与动词，带比较性质的词放一起常是一个固定搭配。
- **from与since**：来自和自从。两者有时候容易混淆。he has lived since 1980。it's a short distance from here。（1）动词+from：come from来自,date from追溯, depart from违背, die from死于, escape from逃出,fall from自…跌落，excuse from免除, keep from阻止做,prevent from不准做。（2）be+形容词+from：be absent from缺席,be different from与众不同, be far from更不用说, be hidden from躲避,be made from用…制成, be tired from因…而疲倦。（3）from...to...：from bad to worse每况愈下，from beginning to end自始至终，from cover to cover从头到尾。（4）from+时间：可表距离...。[from用法学习地址。](https://www.hjenglish.com/new/p963970/)
- at、in、on的使用：后面一般都接时间或地点。`in hospital`#住院。（1）**at**：常用于小而具体的名词前，at the moment。at the door。（2）**in**：表时间时指在一个较长时间内，指地点时表在地点内部。in the evening。in May。in the school。（3）**on**：表地点时指其接触上方，表时间时指具体日期、节日。on Monday。on May 1st。on BeiJin。<b class="green">用于事物时就可以利用in在...之内，on在...之上来选取</b>。还有一些固定搭配：[参考学习地址。](https://baijiahao.baidu.com/s?id=1624869654059325367&wfr=spider&for=pc)
- **be动词**：包括am，is，are。主语为本人时才使用am，第二人称使用are，第三人称使用is。较靠近自生的为第二人称。
- **人称代词**：i、me**(我，做宾语时用)**、my、mine(我的)、we、us、our、ours(我们的)、you、your、yours(你们的)、he、him**(他，做宾语时用)**、his、she、her(宾格)、hers(她的)、it、its(它的)。they、them**(他们，宾格)**、their`(他们的，their county)`、theirs`(他们的，those dictionaries are theirs)`。
- and：连词，连接2个及以上的词或短语，句子，两个词连接时用于增强形容，或表动作反复。
- **for**：for this reason#(表因为，由于)。for three days#表时间，距离。what do you come here for#为什么。he sold his house for 300#等价交换。we set off for Lundon#开往，前往。red is for danger#代表。固定搭配中。[for使用学习地址。](https://wenku.baidu.com/view/96cb873ace84b9d528ea81c758f5f61fb6362815.html)。for为介词，翻译时不用在乎其具体意思，直译其它词就好。
- 复数变化规则：（1）一般情况末尾加s。（2）以s、sh、ch、x结尾的加es。（3）以ce、se、ze结尾的加s(为了区别于2中的内容)。（4）以辅音字母加y结尾的改y为i再加es，`holidy->holidies`。(5)、以o结尾的部分加s，有的加es。（6）部分词为单复同行，如deer，sheep等。（7）部分词的复数形式为不规则变化，如`child->children，foot->feet`等。
- 过去式变化规则：
- **by的使用**：（1）以...计。常接计量单位，且用the：they are paid by the month他们的报酬按月计)。Bananas are usually sold by weight#香蕉通常按重量卖。（2）表时间的用法。意为：“最迟在...前”，“到...时候已经”，we will have finished  the work by next month。he was very tired by the eveing#到晚上他已经很累了。“在...期间”：do you like to swim by moonlight#你喜欢在月光下游泳吗？（3）表手段方式：they came here by the first bus。by hand#用手工。he makes a living by teaching#他以教书为生。
- **about的使用**：（1）表大约，常用于数值前：It costs about 10$。（2）关于，I've heard of him,but i don't know about him#我听说过有这样一个人，但我不知道关于他的事。（3）`be about to`#即将，马上。we are about to leave for BeiJin#我们即将去北京。（4）放不及物动词后。`he has nothing to complain about,does he`。#这里的complain不及物，后需要加介词about/of带名词作宾语。而及物动词前后则不需要加这类介词。
- **without和nothing和none**：`without + 名词`#表示**没有...**。而`nothing`则是表示**什么都没有**。`none`#指**没人**
- **with的使用**：介词，常表示：行为方式、伴随、时间，原因或条件等。与witout意思相反，但用法一致，常见形式为：`with/without + 名词/代词 + 形容词/副词/介词短语...`
- **onto**：在...之上、对...了解、映射成...。介词，hold onto(紧握)、graft onto(嫁接支链)、log onto（进入系统）。
- `ain't` =am not prep.（不是）也可用作are not，is not，have not，has not，will not的缩略语。多用作非正式的口
- on a minute longer#一分钟之久。（on是在...之上，longer有更久的意思，合起来可如此翻译）。
- no point：没意义。no thing：没什么。
- hope for the best：希望有好的结果。
- it's not over untill it's over：不到最后，不见分晓。
- `hardware engineering` 硬件工程
- <i class="label1">what、that、where等词的用法</i>它们不一定用于描述某个词，也常直接引导一个句子做某个成分[学习地址。](https://www.doc88.com/p-243584168541.html)
>**what**：什么/所...的。可引导主语、表语、宾语从句，可在**从句中做成分**。`what you say is quite right`#你所说的相当正确。
>**that**：也可引导主语、表语、宾语从句，但在从句中不做成分，无实际意义，仅仅是连接作用，**引导宾从时一般可省略**。
>**whether和if**：是否。`He asked if/whether we wanted a drink`#他问我们是否想去喝一杯。`I don't care if it dont't rain`#(我不在乎天是否下雨)，引导的从句是前面的条件时只能用if。Whether he has left，I can't say#引导放于句首时用whether。
>**why和because**：why强调结果，because强调原因，所以注意成分来使用。 The reason why he didn't attend the party yesterday is that ...
>where：指代地点。i wonder where she lives#我想知道她住哪。
>which：一般指代物。常用于引导定语从句。 This is the family which is plaining  to move to party#这是要搬进城里的一家人。
>**who和whom**：指代人。whom只能在从句中做宾语，who可做主语。He is the boy who came to our class yesterday
### f、数值、时间、日期：
<i class="label1">数值的表示</i>
- 0-10：zero、one、two、three、four、five、six、seven、eight、nine、then（10）。
- 11-19：eleven、twelve、thirteen、fourteen、fifteen、sixteen、eighteen、nineteen（19）。
- 20-100：twenty、thirty、fourty、fifty、sixty、seventy、eighty、ninety（90）。one hundred（100），
- **更大**：thousand（千）、ten thousand（万）、hundred thousand（十万）、million（百万）、ten million（千万）、hundred million（亿）、billion（十亿）、ten billion（白亿）、hundred billion（千亿）。
- **组合**：twenty one（21）、four thousand and sixty nine（4069）、six hundred and twenty five（625）。不同位之间可用and，个十不用。
- **序数词**：first、second、third、fourth、fifth（第五）。
- **分数**：one fifth（1/5，分子为单数，分母用序数词）、five eights（5/8分子大于1，分母用复数）。three quarters（四分位用quater）。
- **小数**：zero point thirty five（0.35，小数点用point表示）。[数值项表示学习地址。](https://wenku.baidu.com/view/2a91eb713b68011ca300a6c30c2259010202f3b5.html)

<i class="label1">时间的表示</i>
- **通用表达**：直接小时 + 分钟，six ten（6:10）。
- 时间的分钟部分在半小时内：ten past six（6:10）。
- 分钟部分大于半小时：eleven to ten（9:49）#10点差11分。
- 恰好为半小时：half past eleven（11:30）。
- **整点表达**：`It's two. / It's two o'clock.`#noon和midnight分别表示中午，和晚上的12点。
- **大约时间**：it's almost two（马上到两点了）。it's no quite two（还不到两点）。it's just after two（刚过两点）。
- **上下午**：thirteen past six a.m（上午六点十三）。four o'clock p.m（下午四点）。
- [时间表达学习地址。](https://wenku.baidu.com/view/973b06f577a20029bd64783e0912a21614797fb0.html)
- 世纪：in the 17th century。

<i class="label1">日期的表示</i>
- **年代表达**：in the nineteen eighties（1980）。
- **月份**：January（Jan一月）、February（Feb二月）、March（Mar三月）、April（Apr四月）、May（May五月）、June（Jun六月）、July（Jul七月）、August（Aug八月）、September（Sept九月）、October（Oct十月）、November（Nov十一月）、December（Dec十二月）。
- **日期表示**：2014年6月1日：`1 Jun,2014`或`Jun 1st,2014`#1和1st可以换用。
- **星期**：Monday（星期一）、Tuesday（星期二）、Wednesday（星期三）、Tursday（星期四）、Friday（星期五）、Saturday（星期六）、Sunday（星期日）。

### g、天气心情：
- 雨：rainy、shower(阵雨)、few showers(短暂阵雨)、light rain shower(小阵雨)、light dirrzle(微雨)、downpour(暴雨)、heavy rain(大雨)、rainstorms(暴风雨)、ice rain(冻雨)。
- 风：wind、land wind(陆风)、hurricane(飓风)、whirlwind(旋风)、typhoon(台风)、tornado(龙卷风)、gale(季节风)、breeze(微风)、calm(无风)、violent storm(暴风)。
- 晴：fine、fair。
- 云：cloud、mostly sunny(晴时多云)、partly cloudy(局部多云)。
- 雪：snow、drifting snow(飘雪)、snowfall(降雪)、bizzard(大风雪)、rain and snow(雨夹雪)、snowfalk(雪花)、`snowstorms`(暴风雪)。
- 雾：fog、smoke(烟雾)、haze/mist(薄雾)。
- 霜：fost
- 冰：ice、icicle(冰柱)
- [天气词汇学习地址。](https://wenku.baidu.com/view/50527971f242336c1eb95e79.html)

<i class="label1">表示情绪的词</i>
- 快活的：chirrupy 、 felicity(幸福的)
- 兴高采烈的：merry、ecstasy（狂喜,入迷）。 
- anxious(挂念的)、lonly(孤独的)。
- sorrowful(忧伤的)、gloomy(忧郁的)、
- downcast(萎靡不振的)。
- miserable( 悲哀的)、heart-broken(伤心的)
- shirty(生气的)、moodily(易生气的)、angry(愤怒的)
- excited(兴奋的)、pleasure（愉快,高兴）。

h、常见事物词汇：
- 器官相关：shoes(鞋子)、leg(腿，下肢)、shank(小腿)、thigh(大腿)、foreleg(前腿)、hindleg(后腿)。

## 3、数据结构：
要解决一个现实问题，需要将其抽象，建模成数学模型，然后设计一个解此数学模型的算法，再用编程来实现，这个过程当中，不完全是数学公式的表达。数据结构是一门研究非数值计算的程序设计问题中，计算机的操作对象以及它们之间的关系和操作等的科学。1968年国外开始设计。
<i class="label1">算法复杂度</i>有时间复杂度和空间复杂度来衡量。 
时间复杂度：有两种方法，事后统计(由于使用的编程语言不同，计算机硬件不同等会导致得到的时间不一样，所以往往不适应这种方法)、事先预估(一个算法由控制结构(顺序、分支、循环)和原操作(固有数据类型的操作(加、减、赋值、...))构成，算法时间取决于两者综合效果)。例如：
```js
for(var i=0;i<n;i++){
    for(var j=0;j<n;j++){c[i][j] = 0;}// 时间复杂度为O(n^2)
}
```
算法中基本重复执行的次数是问题规模n的某个函数f(n)，算法时间度量记做：`T(n) = O(f(n))`。时间复杂度还可能呈现的形式有：O(1)、O(n)、O(n^2)、O(log(n))、O(2^n)#分别是常量阶、线性阶、平方阶、对数阶、指数阶。
如果遇到分支，可能某些基本操作就不需要执行，那么即使这个基本操作在循环中也是不计次数的，这种情况以算法最糟糕的情况来计算其时间复杂度。即使有了这些方法，计算时间复杂度依然不是那么准确的，比如算法很复杂的情况，各编程语言中调用的内置函数的时间。
### 一、线性表：
最常用，最简单的一种数据结构，一个线性表是n数据元素的有限序列，一个数据元素可以是一页书，可由若干数据项组成，这种情况下常把数据元素称为记录，含有大量记录的线性表又称文件。各编程语言中的列表型数据和线性表类似但两者定义有点区别。<i class="green">(同一线性表中的元素有其相同特性，对线性表的数据不仅可以进行访问还可以插入、删除等。)</i>
**顺序存储**：逻辑关系上相邻的两个元素在物理位置上也相邻，可随机存取表中任意元素，存取位置可以用一个简单直观的方式来表达，在插入和删除时需要对应位置后面所有的元素都需要向后或向前移动一位，这可能会需要移动大量元素，耗费很多时间。
**链式存储**：可以用一个任意的存储单元存储线性表数据元素，可连续也可不连续，为了表示出任意元素ai的后继节点，所以在存储元素点时还会存储其后继元素点的位置，如下表：
| 存储地址    |  数据域   |  指针域   |
| :-: | :-: | :-: |
|  1   |  a   |  3   |
|   7  |  e   |  9   |
|   5  |  c   |   6  |
|   3  |  b   |  5   |
|   6  |  d   |  7   |
指针域指向的是其后继节点所在的存储地址。还需要一个头指正H来表示从哪一个开头，如H=1，它们间的逻辑顺序就为：a →b →c →d →e →...。这种存储结构在逻辑相邻的元素其存储的物理位置上不紧邻，也称为链式映像。 插入和删除时只需要修改指正即可，不需要移动大量元素。这种链表也称为**线性链表**。
**循环链表** ：另一种形式的链式存储结构，特点是最后一个节点的指针域指向头指针，形成一个环，因此从任意位置出发都可以找到其它节点。
**双向链表**：单向链表中要从一个节点出发查找目标节点其时间复杂度在：O(1)~O(n-1)间，为了能更快速的查找可以存储两个指针域，即后继节点位置和前驱节点位置。
### 二、栈和队列：
栈和队列也是线性表，其特殊性在于栈和队列的操作是线性表操作的子集，因此可以称为限定性的数据结构。
<i class="label1">栈</i>是限定仅在表尾进行插入或删除操作的线性表，表尾端称为栈顶，表头端称为栈底。不含元素的空表称为空栈。所以栈又称为后进先出的线性表。
<i class="label1">队列</i>和栈相反，队列是一种先进先出的线性表，它只允许在表的一端进行插入，在表的另一端进行删除元素。只允许插入的一端是队尾。
<i class="label2">链队列</i>和线性表一样，队列中也可存储指针域，不过还需要指定一个尾指针，当头指针和尾指针同时指向头节点时称为空的连队列。
<i class="label2">双端队列</i>在队列两端都允许插入和删除操作，或在这基础上自定义限制。
<i class="label1">递归与迭代</i>递归就是指递归函数，直接调用自己活结果一系列语句间接调用自己的函数就称作递归函数。这与迭代很类似，迭代是重复一个过程，每次得到的值作为下一次过程的新值使用。某些问题用递归、迭代都可以求解，具体哪种方法好的根据具体的情景。
### 三、串：
字符串一般简称为串，在汇编和语言的编译程序中，源程序和目标程序都是字符串数据。由0个或多个字符组成的有限序列就称为串，一般记为s='a1a2...an'。零个字符的串称为**空串**。串中任意连续个字符称为该串的**子串**，包含子串的串相应地称为**主串**。包含一个或多个空格的串称为**空格串**。子串起始字符在主串中出现的位置即为该子串的位置。
串的存储：也像线性表存储那样，串可以用顺序存储和链式存储，链式存储时，一些子串可以是多个字符。
### 四、数组和广义表：
这也是两种数据结构，数组和广义表可以看成是线性表的一个定义扩展——表中的数据元素也是一个数据结构。两者的定义都是一大段伪代码表示的。
**数组**：如果有一维中的一个元素是一个数据结构的话，那么其它元素也是相同的数据结构，且长度相同。数组一旦被定义，它的维数和维界就不再改变，除了初始化和销毁之外，数组只有存取元素和修改元素值的操作。所以一般采用顺序存储的方式。
**广义表**：线性表的推广，也有人称其为列表，与数组不同的是，广义表中的数据元素可以具有不同的结构(如一个是a，一个是一个子表)，因此难以用顺序存储结构表示，通常采用链式存储结构。所以广义表比线性表更灵活。程序语言设计中的列表可以说是一个广义表的设计。
**广义表的存储**：由于广义表的特殊结构需要两个存储结构，一个存储所有广义表数据，另一个存储各元素对应的数据类型，指针。数据存储：无论是原子数据还是列表数据，其中每个元素都被分开一个个存到物理地址中，一个列表中的数据连续的存储到地址中。指针域存储：一个tag指针表示该元素数据类型，一个头指针，一个尾指针(分别指向该列表的表头和表尾)，原点数据只需一个。
### 五、树：
<div class="introduce">堆、栈、队列等数据结构在查找时非常费时间，而用树数据结构可以提高查询效率，且现实中很多关系符合树的结构，树的第一层只有一个节点即根节点(没有父节点的节点)，其余为子节点，每个节点可有多个子节点和一个直接父节点。一种非线性的数据结构，树和二叉树最为常用。第一个节点为根节点，子节点数不为0的节点称为分支节点后非终端节点，字节点数为0的节点称为叶子节点或终端节点，节点的分支数称为度，字节点称为孩子节点，该节点称为其双亲。 </div>

**二叉树**：每个节点最多有两个子节点，第k层最多有2^(k-1)个节点，为k层的树最多有2^k-1个节点。 
无序树：树中任意节点的子结点之间没有顺序关系,这种树称为无序树,也称为自由树;
有序树：树中任意节点的子结点之间有顺序关系，这种树称为有序树；
**满二叉树**：除最后一层无子节点外其余层节点均有两个子节点；
**完全二叉树**：二叉树的最后一层可以不完整但其余层的节点达到最大值且最后一层的节点全部集中在左侧。
**二叉树的存储**：对于满二叉树和完全二叉树可以使用顺序存储结构，将各节点编号，依次从上到下，从左到右的存储节点即可。而对于普通树最坏的存储情况是：k层只有k个节点，却需要一个`2^k-1`长的一维数组，因为遇到空的节点要用0或其它占位表示。
**用链式存储**：存储每个节点时再存储左右指针域即可，这称为二叉链表，如果再多存一个父节点的指针域则称为三叉链表 。
**线索二叉树**：当以二叉链表来存储树，在查找时只能知道某个节点的左右子树，却不知道其前驱和后继，这只有在动态查找过程中才能得到的。方法如下：在二叉链表的基础上再添加两个标志域，记为：LTag，RTag，LTag为0时表示有左节点，左指针域指向其左节点，为1时左指针域指向其前驱，RTag类似。这种二叉链表称为线索链表，指向节点前驱和后继的指针较线索。加上线索的二叉树称为线索二叉树。
**二叉查找树(二叉排序树、二叉搜索树)**：左子树上所有节点的值都小于根节点的值，右子树上所有节点的值都大于等于根节点的值，左子树和右子树上的子二叉树也均满足这种排列。树种没有节点名相同的节点。
<i class="label1">哈夫曼树(最优二叉树)</i>：一个节点到另一个节点的分支称为两节点间的路径，路径上的分支数目称作路径长度，树的路径长度等于根节点到每一个节点的路径长度的总和。而每个节点有权重的情况还要乘以节点权重(如：根节点到a点经过两条路径，a点权重为8，则该条路径长度`WPL=8*2`)，这称为树的带权路径长度。而哈弗曼树是使WPL最小。构建过程如下：
a、有n个带权值的节点构成n颗二叉树的集合：F={T1,T2,...}，其左右子树均为空(初始时全部是节点状态)，选择最小的两个权值节点构建二叉树(作为左右节点，小在左，大在右)，两节点权值之和为它们的根节点的权值。
b、将这个新构建好的二叉树放到F中，删除F中之前用于构建二叉树的两个节点(二叉树)，重复步骤a。 
<i class="label2">用途</i>：例如，在英文中，e的出现机率最高，而z的出现概率则最低。当利用哈夫曼编码对一篇英文进行压缩时，e极有可能用一个比特来表示，而z则可能花去25个比特（不是26）。用普通的表示方法时，每个英文字母均占用一个字节，即8个比特。二者相比，e使用了一般编码的1/8的长度，z则使用了3倍多。倘若我们能实现对于英文中各个字母出现概率的较准确的估算，就可以大幅度提高无损压缩的比例。**示例**：保存文本`ACBDCBBAO`的时候每个字符占1个字节，所以一般会转为其对应的二进制编码0001形式的，这样每个字符只占四位或更短，为了最小化每个字符的前缀编码(能唯一识别每个字符的编码)，可以使用赫夫曼树，先计算各字母频率，同乘10或100转为整数作为它们的节点权重，建立最优二叉树，左分支为0，右分支为1，然后从根节点查找各个节点的路径表示就是各个字母的最小前缀编码。在解码时按照最短前缀到最长前缀从编码中一一扫描匹配。
**树的遍历**：1、前序遍历:先排中间节点再排左子树节点最后排右子树节点;2、中序遍历:先排左子树的节点再排中间节点然后排右子树节点;3、后序遍历:先排左子树节点再排右子树节点最后排中间节点。如图：
其先序遍历为ABDECF。其中序遍历为DBEAFC。其后序遍历为DEBFCA。依据其中两种遍历顺序可画画该二叉树。
<i class="label1">分治法</i>分治法可以通俗的解释为：把一片领土分解，分解为若干块小部分，然后一块块地占领征服，被分解的可以是不同的政治派别或是其他什么，然后让他们彼此异化。
分治法的精髓：分--将问题分解为规模更小的子问题；治--将这些规模更小的子问题逐个击破；合--将已解决的子问题合并，最终得出“母”问题的解；
<i class="label1">回溯法</i>一种优先搜索法，又称为试探法，按优先条件向前搜索，但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。
<i class="label1">回溯与树的遍历</i>回溯法也是设计递归过程的一种重要方法，例如：求集合A={1,2,3}的所有子集，从根节点(空集)每次向前探索，左子树选择一个节点a，而右子树放弃该节点，依次这样进行递归。
<i class="label1">平衡二叉树</i>：为了避免二叉搜索树变成“链表”，我们引入了平衡二叉树，即让树的结构看起来尽量“均匀”，左右子树的节点数尽量一样多。又称AVL树，指的是左子树上的所有节点的值都比根节点的值小，而右子树上的所有节点的值都比根节点的值大，且左子树与右子树的高度差最大为1。构造如下：
先按照生成二叉搜索树的方法构造二叉树，直至二叉树变得不平衡，即出现这样的节点：左子树与右子树的高度差大于1。至于如何调整，要看插入的导致二叉树不平衡的节点的位置。主要有四种调整方式：LL（左旋）、RR（右旋）、LR（先左旋再右旋）、RL（先右旋再左旋）。[详细构建参考学习地址。](https://blog.csdn.net/winder9898/article/details/51098211)
[平衡二叉树参考学习地址。](https://baijiahao.baidu.com/s?id=1646617486319372351&wfr=spider&for=pc)
**B树**：B-树就是B树。是一个节点可以拥有多于2个子节点的二叉查找树。与自平衡二叉查找树不同，B-树为系统最优化大块数据的读和写操作。B-tree算法减少定位记录时所经历的中间过程，从而加快存取速度。普遍运用在数据库和文件系统。
<i class="label1">红黑树</i>一种自平衡二叉查找树，是在计算机科学中用到的一种数据结构，典型的用途是实现关联数组。在1972年由Rudolf Bayer发明的，当时被称为平衡二叉B树（symmetric binary B-trees）。后来，在1978年被 Leo J. Guibas 和 Robert Sedgewick 修改为如今的“红黑树”。
红黑树是一种特化的AVL树（平衡二叉树），都是在进行插入和删除操作时通过特定操作保持二叉查找树的平衡，从而获得较高的查找性能。 它虽然是复杂的，但它的最坏情况运行时间也是非常良好的，并且在实践中是高效的： 它可以在O(log n)时间内做查找，插入和删除，这里的n 是树中元素的数目。
<i class="label2">红黑性质</i>节点是红色或者黑色、 根节点是黑色、每个叶子的节点都是黑色的空节点（NULL）、每个红色节点的两个子节点都是黑色的。从任意节点到其每个叶子的所有路径都包含相同的黑色节点。按这些性质组合起来几乎就是每条路径上红黑节点相间的状态。
<i class="label2">插入与删除</i>在插入一个新的节点后可能会破坏上面红黑树的几条规则，比如一个值恰好插入到倒数第二层的一个节点(倒数第一层都是空节点黑色)，这个倒数第二层节点是红色，所以把新插入的这个节点着为红色或黑色都不符合规则。调整：从下往上尝试改变每个点颜色，若到根节点颜色更改都失败则需要尝试旋转节点。[红黑树操作详解学习地址。](https://baijiahao.baidu.com/s?id=1641940303518144126&wfr=spider&for=pc)
<div class="important">最优二叉树编码文本实操。红黑树为什么引入红黑性质！</div>

### 六、图：
图是一种较线性表和树更为复杂的数据结构，图中任意两个数据元素之间都可能有关系，也可能图中的某个点和其它点都没有关系，图是一种数据结构，加上一组基本操作就构成了抽象数据类型。图的使用非常广。
<i class="label1">相关术语</i>：图中数据元素通常称作顶点，v,w是两个顶点，若<v,w>∈VR(两顶点之间的关系集和)，v为弧尾巴，w为弧头，此时的图称为有向图。若<v,w>∈VR必有<w,v>∈VR则此时的图为无向图。以节点v为弧头的弧的数目称为节点v的**入度**，以v为弧尾的弧的数目称为v的**出度**。用n表示图中节点，e表示图中边或弧的数目，对于无向图，`e∈(0,n*(n-1) / 2)`,有`n*(n-1) / 2`条边的称为**无向完全图**。对于有向图，其`e∈(0,n*(n-1))`,而有`n*(n-1)`条边的是**有向完全图**。有很少的边的称为**稀疏图**，反之称为**稠密图**。与图的边或弧相关的数叫**权**，带权的图称为**网**。
<i class="label1">环</i>从点v到v'经过一系列点`E={v,v0,...,v'}`则称该序列点为**路径**，序列中点不重复出现的路径称为**简单路径**，第一个节点和最后一个节点相同则称为回路或**环**，而其它顶点不重复出现的回路为**简单回路**。
<i class="label1">连通图</i>：无向图的一条路径中称第一个顶点和最后一个顶点v与v'是连通的，如果该无向图中任意两个点都是连通的则称该图为**连通图**，无向图的极大连通子图称为该图的**连通分量**。对于有向图则相应的称为**强连通图**和**强连通分量**。
<i class="label1">图的存储</i>因为图的复杂性，会自然想到使用多重链表来存储图，但由于最小边或弧数与最大数可能相差较大，这回浪费很多存储单元，而如果为不同边或弧数的分组存储又会为后面图的操作带来难度，因此很少使用该存储方式。
<i class="label2">数组表示法</i>用一个一维数组存储所有节点，再用一个二维数组存储各节点的关系。如果是一个无向图其得到的数组是对称的<i class="green">(一般0表示无连接，1表示有连接，如果是带权的边可将1换成对应的权值)</i>，可以只存储一个上三角或下三角矩阵。得到的关系矩阵称为邻接矩阵。
<i class="label2">邻接表</i>：图的一种链式存储结构，邻接表中对图的每个顶点建立一个单链表，第i个单链表中的节点表示依附于顶点vi的边。单链表的每一行都是存储于该节点相连的节点的相关信息 。每个节点由3个域组成：邻接点域(指示与当前节点vi邻接的点在途中的位置)、链域(指示下一条边或弧的节点)、数据域(存储和边弧相关的信息)。适合边稀疏，边的信息较多的情况。！插入和删除边时麻烦。
<i class="label2">十字链表</i>是有向图的一种链式存储结构，是有向图的邻接表和逆邻接表结合的。对应有向图中的每一条弧有一个链表存储，对应每个顶点也有一个链表存储。**弧链表**：5各域组成，尾域(tailvex指示弧尾顶点所在位置)，头域(headvex指示弧头所在位置)、链域hlink和tlink指向弧头相同的下一条弧，弧尾相同的下一条弧。info域存储该弧相关信息，弧头相同的在同一链表上，弧尾相同的也在同一链表上。**顶点域**：data域为存储该顶点信息，firstin和firstout分别指向以该顶点为弧头和弧尾的第一个弧节点(对应弧链表的索引)。
<i class="label2">链接多重表</i>与十字链表相似，不过是一个更适合无向图的存储结构，在一些边的相关操作时邻接表很不方便，这时可以使用链接多重表，有边链表和顶点链表存储，边链表：6个域组成，mark(标志域，表示该边是否被搜素过)、ivex和jvex为该边依附的两个顶点在图中的位置(对应顶点链表中的索引)、ilink和jlink分别指向下一条和两个顶点相连的边，info为边的信息。顶点链表：data域存储顶点相关信息，firstedge为指向第一条依附于该顶点的边(对应边链表中的索引)。

## 4、物理：
功率：是指物体在单位时间内所做的功的多少，即功率是描述做功快慢的物理量。功的数量一定，时间越短，功率值就越大。求功率的公式为功率=功/时间。